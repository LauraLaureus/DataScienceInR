lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file <- paste(5,"-5-",i, "tra.dat", sep = "")
%x_tra <- read.csv(file, comment.char = "@")
run_lm_fold <- function(i,x,tt = "test"){
file <- paste(5,"-5-",i, "tra.dat", sep = "")
#x_tra <- read.csv(file, comment.char = "@")
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file <- paste(5,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file, comment.char = "@")
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file <- paste(5,"-5-",i, "tra.dat", sep = "")
file
x_tra <- read.csv(file, comment.char = "@")
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
file_n <- paste(5,"-5-",i, "tra.dat", sep = "")
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(5,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@")
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
setwd("~/GitHub/DataScienceInR/CaliforniaRegression")
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(5,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@")
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
setwd("~/GitHub/DataScienceInR/CaliforniaRegression")
california_original <- read.csv("california.dat", header = FALSE, comment.char = "@")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(5,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
setwd("~/GitHub/DataScienceInR/CaliforniaRegression")
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(x,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
# file <- paste(5,"-5-",i, "tst.dat", sep = "")
# x_tst <- read.csv(file, comment.char = "@")
# ln <- length(names(x_tra))-1
# names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tra)[In+1] <- "Y"
# names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
# names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=lm(Y~.,x_tra)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(x,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-5-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(x,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-5-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:In] <- paste ("X", 1:ln, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:ln, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
run_lm_fold <- function(i,x,tt = "test"){
file_n <- paste(x,"-5-",i, "tra.dat", sep = "")
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-5-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=lm(Y~.,x_tra)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
lmMSEtrain<-mean(sapply(1:5,run_lm_fold,nombre,"train"))
lmMSEtest<-mean(sapply(1:5,run_lm_fold,nombre,"test"))
lmMSEtrain
lmMSEtest
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
yprime=predict(fitMulti,test)
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
# if (tt == "train") {
#   test <- x_tra
# }
# else {
#   test <- x_tst
# }
# fitMulti=kknn(Y~.,x_tra,test)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
# fitMulti=kknn(Y~.,x_tra,test)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
# yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knnMSEtest<-mean(sapply(1:5,run_knn_fold,nombre,"test"))
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
yprime=predict(fitMulti,test)
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti=kknn(Y~.,x_tra,test)
yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti<- kknn(Y~.,x_tra,test)
yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti<- kknn(Y~.,x_tra,test)
yprime=predict.kknn(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti<- kknn(Y~.,x_tra,test)
yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
install.packages("caret")
nombre <- "california"
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti<- kknn(Y~.,x_tra,test)
yprime=predict(fitMulti,test)
# sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
setwd("~/GitHub/DataScienceInR/BreastCancerClassification")
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
wbcd <- read.csv("breast-cancer-wisconsin.data.txt", stringsAsFactors = FALSE)
str(wbcd)
wbcd <- wbcd[,-1]
table(wbcd$diagnosis)
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"),
labels = c("Benign", "Malignant"))
wbcd <- read.csv("breast-cancer-wisconsin.data.txt", stringsAsFactors = FALSE, header = FALSE)
names(wbcd)<- c("ID","Diagnosis","radius","texture","perimeter","area","smoothness","compactness","concavity","concave points","symmetry","fractal dimension")
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
str(wbcd)
wbcd <- wbcd[,-1]
table(wbcd$diagnosis)
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"),
labels = c("Benign", "Malignant"))
round(prop.table(table(wbcd$diagnosis)) * 100, digits = 1)
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
wbcd_n <- as.data.frame(lapply(wbcd[,2:31], normalize))
summary(wbcd_n$area_mean)
plot(wbcd[,2:5])
plot(wbcd_n[,1:4], col=wbcd[,1])
wbcd_train <- wbcd_n[1:469, ]
wbcd_test <- wbcd_n[470:569, ]
wbcd_train_labels <- wbcd[1:469, 1]
wbcd_test_labels <- wbcd[470:569, 1]
library(class)
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test,
cl = wbcd_train_labels, k=21)
table(wbcd_test_pred,wbcd_test_labels)
knnModel <- traintrain(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
"scale"))
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
"scale"))
require("caret")
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
"scale"))
install.packages("e1071")
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
"scale"))
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
knnModel                                                                                     "scale"))
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
knnModel                                                                                     "scale"))
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
knnModel                                                                                     "scale"))
require("caret")
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center",
knnModel                                                                                     "scale"))
knnModel <- train(x = wbcd[1:469,-1], y = wbcd[1:469,1], method = "knn", preProc = c("center","scale"))
knnModel
knnFit <- train(wbcd_train, wbcd_train_labels, method="knn", metric="Accuracy", tuneGrid = data.frame(.k=1:15))
knnFit
knnPred <- predict(knnModel, newdata = wbcd_test)
knnPred
postResample(pred = knnPred, obs = testData$y)
postResample(pred = knnPred, obs = testData$y)
setwd("~/GitHub/DataScienceInR/CaliforniaRegression")
run_knn_fold <- function(i, x, tt = "test") {
file <- paste(x, "-5-", i, "tra.dat", sep="")
x_tra <- read.csv(file, comment.char="@")
file <- paste(x, "-5-", i, "tst.dat", sep="")
x_tst <- read.csv(file, comment.char="@")
In <- length(names(x_tra)) - 1
names(x_tra)[1:In] <- paste ("X", 1:In, sep="")
names(x_tra)[In+1] <- "Y"
names(x_tst)[1:In] <- paste ("X", 1:In, sep="")
names(x_tst)[In+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
fitMulti<- kknn(Y~.,x_tra,test)
yprime=fitMulti$fitted.values
sum(abs(test$Y-yprime)^2)/length(yprime) ##MSE
}
knnMSEtrain<-mean(sapply(1:5,run_knn_fold,nombre,"train"))
knnMSEtest<-mean(sapply(1:5,run_knn_fold,nombre,"test"))
knnMSEtrain
knnMSEtest
plot(knnFit)
plot(knnFit,main ="Presición vs k", ylab= "Presición", xlab="K(vecinos)", pch= 20)
max(knnFit)
max(knnFit$dots)
knnFit <- train(wbcd_train, wbcd_train_labels, method="knn", metric="Accuracy", tuneGrid = data.frame(.k=1:35))
plot(knnFit,main ="Presición vs k", ylab= "Presición", xlab="K(vecinos)", pch= 20)

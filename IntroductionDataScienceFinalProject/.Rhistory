names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra, y = as.factor(Y),method ="knn")
prediction = predict(model,test)
cm = confusionMatrix(prediction,test)
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:10,run_knn_fold,nombre,"train")
collection_accuracy_lmm = sapply(1:5,run_knn_fold,nombre,"train")
collection_accuracy_lmm = sapply(1:5,knn_fold,nombre,"train")
nombre <- "australian"
knn_fold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra, y = as.factor(Y),method ="knn")
prediction = predict(model,test)
cm = confusionMatrix(prediction,test)
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:5,knn_fold,nombre,"train")
collection_accuracy_lmm = sapply(1:10,knn_fold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra, y = as.factor(Y),method ="knn")
prediction = predict(model,test)
cm = confusionMatrix(prediction,test)
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test)
cm = confusionMatrix(prediction,test)
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test)
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,c(-4,-12,-15)])
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_lmm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
confusionMatrix(prediction,test[,c(-4,-12,-15)])
#(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
cm = confusionMatrix(prediction,test[,c(-4,-12)])
```{r}
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,c(-4,-12)])
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
nombre <- "australian"
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,c(-4,-12,-15)])
(cm$table[1,1]+cm$table[2,2])/sum(cm$table)
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
list(prediction = "predict", test= test[,-4,-12,-15])
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
return(list(prediction = "predict", test=test[,-4,-12,-15]))
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test"){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
(cm$table[1,1]+ cm$table[2,2])/sum(cm$table)
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train")
runKnnFold <- function(i,x,tt = "test",method){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
if(method == "knn"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
}
else if(method == "lda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="lda")
}
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
(cm$table[1,1]+ cm$table[2,2])/sum(cm$table)
}
collection_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train","knn")
collection2_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train","lda")
runKnnFold <- function(i,x,tt = "test",method){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
if(method == "knn"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
}
else if(method == "lda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="lda")
}
else if (method == "qda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="qda")
}
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
(cm$table[1,1]+ cm$table[2,2])/sum(cm$table)
}
collection3_accuracy_cm = sapply(1:10,runKnnFold,nombre,"train","qda")
knnPredict = sapply(1:10,runKnnFold,nombre,"train","knn")
knnPredict = sapply(1:10,runKnnFold,nombre,"train","knn")
ldaPrediction = sapply(1:10,runKnnFold,nombre,"train","lda")
qdaPrediction = sapply(1:10,runKnnFold,nombre,"train","qda")
runFold <- function(i,x,tt = "test",method){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
if(method == "knn"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn")
}
else if(method == "lda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="lda")
}
else if (method == "qda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="qda")
}
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
(cm$table[1,1]+ cm$table[2,2])/sum(cm$table)
}
knnPredict = sapply(1:10,runFold,nombre,"train","knn")
classificationPredictions = as.matrix(cbind(knnPredict,ldaPrediction,qdaPrediction))
friedman.test(classificationPredictions)
friedman.test(classificationPredictions)
groups2 <- rep(1:dim(classificationPredictions)[2], each=dim(classificationPredictions)[1])
pairwise.wilcox.test(classificationPredictions, groups2, p.adjust= "holm", paired = TRUE)
nombre <- "australian"
runFold <- function(i,x,tt = "test",method){
file_n <- paste(x,"-10-",i, "tra.dat", sep = "")
file_n
x_tra <- read.csv(file_n, comment.char = "@", header = FALSE)
file <- paste(x,"-10-",i, "tst.dat", sep = "")
x_tst <- read.csv(file, comment.char = "@")
ln <- length(names(x_tra))-1
names(x_tra)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tra)[ln+1] <- "Y"
names(x_tst)[1:ln] <- paste ("X", 1:ln, sep="")
names(x_tst)[ln+1] <- "Y"
x_tra[,ln+1] = as.factor( x_tra[,ln+1])
x_tst[,ln+1] = as.factor( x_tst[,ln+1])
if (tt == "train") {
test <- x_tra
}
else {
test <- x_tst
}
attach(x_tra)
if(method == "knn"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="knn",preProc = c("center","scale"))
}
else if(method == "lda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="lda",preProc = c("center","scale"))
}
else if (method == "qda"){
model = train(x = x_tra[,c(-4,-12,-15)], y = as.factor(Y),method ="qda",preProc = c("center","scale"))
}
prediction = predict(model,test[,c(-4,-12,-15)])
cm = confusionMatrix(prediction,test[,15])
(cm$table[1,1]+ cm$table[2,2])/sum(cm$table)
}
knnPredict = sapply(1:10,runFold,nombre,"train","knn")
ldaPrediction = sapply(1:10,runFold,nombre,"train","lda")
qdaPrediction = sapply(1:10,runFold,nombre,"train","qda")
classificationPredictions = as.matrix(cbind(knnPredict,ldaPrediction,qdaPrediction))
friedman.test(classificationPredictions)
groups2 <- rep(1:dim(classificationPredictions)[2], each=dim(classificationPredictions)[1])
pairwise.wilcox.test(classificationPredictions, groups2, p.adjust= "holm", paired = TRUE)
require(car)
?leveneTest
leveneTest(A15 ~ ., data = australian)
?var.test
var.test(australian$A15 ~ ., data = australian)
var.test(A15 ~ ., data = australian)
var.test(A15~. , data = australian)
lt_n1 = leveneTest(numerical_australian[,1],output_australian)
australian <- read.csv("./AustralianClassification/australian/australian.dat", comment.char = "@", header = FALSE)
names(australian) <- c("A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15")
numerical_australian <- australian[,c(-1,-4,-8,-9,-11,-12,-15)]
categorical_australian <- australian[,c(1,4,8,9,11,12)]
output_australian <- australian[,15]
lt_n1 = leveneTest(numerical_australian[,1],output_australian)
lt_n1
lt_n1$`Pr(>F)`
?sapply
leveneTestForNumerical = function (column){
leveneTest(numerical_australian[,column],output_australian)
}
sapply(1:(dim(numerical_australian)[]2),leveneTestForNumerical)
sapply(1:(dim(numerical_australian)[2]),leveneTestForNumerical)
leveneTestForNumerical = function (column){
l = leveneTest(numerical_australian[,column],output_australian)
return(l$`Pr(>F)` )
}
sapply(1:(dim(numerical_australian)[2]),leveneTestForNumerical)
leveneTestForNumerical = function (column){
l = leveneTest(numerical_australian[,column],output_australian)
return()
ifelse(l$`Pr(>F)` > 0.05, "Nula aceptada","Nula rechazada")
}
sapply(1:(dim(numerical_australian)[2]),leveneTestForNumerical)
leveneTestForNumerical = function (column){
l = leveneTest(numerical_australian[,column],output_australian)
ifelse(l$`Pr(>F)` > 0.05, "Nula aceptada","Nula rechazada")
}
sapply(1:(dim(numerical_australian)[2]),leveneTestForNumerical)
leveneTestForNumerical = function (column){
l = leveneTest(numerical_australian[,column],output_australian)
ifelse(l$`Pr(>F)` > 0.05, "Nula aceptada","Nula rechazada")
}
results_Levene = sapply(1:(dim(numerical_australian)[2]),leveneTestForNumerical)
results_Levene[1,]
?shapiro.test
numerical_australian_shapiro <- apply(numerical_australian,2,shapiro.test)
numerical_australian_shapiro
pairs(numerical_australian, main = "Comparación de las variables numéricas entre ellas",col=ifelse(australian[,15]== 1,"red","blue"), pch = 16)
warnings()
